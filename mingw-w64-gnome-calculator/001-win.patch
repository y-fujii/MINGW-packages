--- ./Makefile.am.orig	2015-01-29 16:28:18.000000000 +0100
+++ ./Makefile.am	2015-04-15 21:58:52.598827600 +0200
@@ -1,4 +1,4 @@
-SUBDIRS = po src search-provider data help
+SUBDIRS = po src search-provider data
 
 # Temporary fix for JHBuild, see https://bugzilla.gnome.org/show_bug.cgi?id=641652
 ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS} -I m4
--- ./search-provider/Makefile.am.orig	2015-01-29 16:28:18.000000000 +0100
+++ ./search-provider/Makefile.am	2015-04-15 21:58:52.610827700 +0200
@@ -1,6 +1,12 @@
+# The valac command is always executed in the sources directory, not the build
+# directory. If $(top_srcdir) is used, it will be relative to the build directory.
+vapidir = ../vapi
+
+
 libexec_PROGRAMS = gnome-calculator-search-provider
 
 gnome_calculator_search_provider_SOURCES = \
+	$(top_srcdir)/src/windows.c \
 	search-provider.vala
 
 gnome_calculator_search_provider_VALAFLAGS = \
--- ./search-provider/search-provider.vala.orig	2015-01-29 16:28:18.000000000 +0100
+++ ./search-provider/search-provider.vala	2015-04-15 21:58:52.617828200 +0200
@@ -9,6 +9,9 @@
  * license.
  */
 
+extern string locale_get_tsep ();
+extern string locale_get_decimal ();
+
 [DBus (name = "org.gnome.Shell.SearchProvider2")]
 public class SearchProvider : Object
 {
@@ -23,11 +26,13 @@
         {
             int exit_status;
 
-            var tsep_string = Posix.nl_langinfo (Posix.NLItem.THOUSEP);
+			string tsep_string;
+			tsep_string = locale_get_tsep ();
             if (tsep_string == null || tsep_string == "")
                 tsep_string = " ";
 
-            var decimal = Posix.nl_langinfo (Posix.NLItem.RADIXCHAR);
+            string decimal;
+			decimal = locale_get_decimal ();
             if (decimal == null)
                 decimal = "";
 
--- ./src/gcalccmd.vala.orig	2015-01-29 16:28:18.000000000 +0100
+++ ./src/gcalccmd.vala	2015-04-15 21:58:52.623829100 +0200
@@ -15,11 +15,13 @@
 
 static void solve (string equation)
 {
-    var tsep_string = Posix.nl_langinfo (Posix.NLItem.THOUSEP);
+	string tsep_string;
+	tsep_string = locale_get_tsep ();
     if (tsep_string == null || tsep_string == "")
         tsep_string = " ";
 
-    var decimal = Posix.nl_langinfo (Posix.NLItem.RADIXCHAR);
+	string decimal;
+	decimal = locale_get_decimal ();
     if (decimal == null)
         decimal = "";
 
@@ -82,5 +84,5 @@
     if (requires_new_line)
         stdout.printf ("\n");
 
-    return Posix.EXIT_SUCCESS;
+    return 0;
 }
--- ./src/gnome-calculator.vala.orig	2015-01-29 16:28:18.000000000 +0100
+++ ./src/gnome-calculator.vala	2015-04-15 21:58:52.630828500 +0200
@@ -142,17 +142,20 @@
         {
             /* NOTE: Is not translated so can be easily parsed */
             stderr.printf ("%1$s %2$s\n", program_name, VERSION);
-            return Posix.EXIT_SUCCESS;
+            return 0;
         }
 
         if (options.contains ("solve"))
         {
             var solve_equation = (string) options.lookup_value ("solve", VariantType.STRING);
-            var tsep_string = Posix.nl_langinfo (Posix.NLItem.THOUSEP);
+			
+			string tsep_string;
+			tsep_string = locale_get_tsep ();
             if (tsep_string == null || tsep_string == "")
                 tsep_string = " ";
 
-            var decimal = Posix.nl_langinfo (Posix.NLItem.RADIXCHAR);
+            string decimal;
+			decimal = locale_get_decimal ();
             if (decimal == null)
                 decimal = "";
 
@@ -169,17 +172,17 @@
                 var serializer = new Serializer (DisplayFormat.AUTOMATIC, 10, 9);
                 serializer.set_representation_base (representation_base);
                 stdout.printf ("%s\n", serializer.to_string (result));
-                return Posix.EXIT_SUCCESS;
+                return 0;
             }
             else if (error == ErrorCode.MP)
             {
                 stderr.printf ("Error: %s\n", Number.error);
-                return Posix.EXIT_FAILURE;
+                return 1;
             }
             else
             {
                 stderr.printf ("Error: %s\n", mp_error_code_to_string (error));
-                return Posix.EXIT_FAILURE;
+                return 1;
             }
         }
 
@@ -264,7 +267,10 @@
     public static int main (string[] args)
     {
         Intl.setlocale (LocaleCategory.ALL, "");
-        Intl.bindtextdomain (GETTEXT_PACKAGE, LOCALE_DIR);
+		
+		string p = Win32.get_package_installation_directory_of_module (null);
+        Intl.bindtextdomain (GETTEXT_PACKAGE, Path.build_filename (p, "share", "locale"));
+		
         Intl.bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
         Intl.textdomain (GETTEXT_PACKAGE);
 
--- ./src/Makefile.am.orig	2015-01-29 16:28:18.000000000 +0100
+++ ./src/Makefile.am	2015-04-15 21:58:52.638829100 +0200
@@ -1,6 +1,10 @@
 bin_PROGRAMS = gnome-calculator gcalccmd
 noinst_PROGRAMS = test-number test-equation test-serializer
 
+# The valac command is always executed in the sources directory, not the build
+# directory. If $(top_srcdir) is used, it will be relative to the build directory.
+vapidir = ../vapi
+
 TESTS = test-number test-equation test-serializer
 
 AM_CPPFLAGS = \
@@ -40,6 +44,7 @@
 	function-manager.vala \
 	math-function-popup.vala \
 	math-history.vala \
+	windows.c \
 	$(BUILT_SOURCES)
 
 gnome_calculator_VALAFLAGS = \
@@ -66,7 +71,8 @@
 	serializer.vala \
 	unit.vala \
 	math-function.vala \
-	function-manager.vala
+	function-manager.vala \
+	windows.c
 
 gcalccmd_VALAFLAGS = \
 	--target-glib 2.32 \
@@ -84,7 +90,8 @@
 	mpfr.vapi \
 	test-number.vala \
 	number.vala \
-	serializer.vala
+	serializer.vala \
+	windows.c
 
 test_number_VALAFLAGS = \
 	--target-glib 2.32 \
@@ -110,7 +117,8 @@
 	serializer.vala \
 	unit.vala \
 	math-function.vala \
-	function-manager.vala
+	function-manager.vala \
+	windows.c
 
 test_equation_VALAFLAGS = \
 	--target-glib 2.32 \
@@ -128,7 +136,8 @@
 	mpfr.vapi \
 	test-serializer.vala \
 	number.vala \
-	serializer.vala
+	serializer.vala \
+	windows.c
 
 test_serializer_VALAFLAGS = \
 	--target-glib 2.32 \
--- ./src/math-equation.vala.orig	2015-01-29 16:28:18.000000000 +0100
+++ ./src/math-equation.vala	2015-04-15 21:58:52.645829600 +0200
@@ -477,7 +477,8 @@
             get_bounds (out start, out end);
 
         var text = get_text (start, end, false);
-        var tsep_string = Posix.nl_langinfo (Posix.NLItem.THOUSEP);
+		string tsep_string;
+		tsep_string = locale_get_tsep ();
         if (tsep_string == null || tsep_string == "")
             tsep_string = " ";
         text = text.replace (tsep_string, "");
--- ./src/serializer.vala.orig	2015-01-29 16:28:18.000000000 +0100
+++ ./src/serializer.vala	2015-04-15 21:58:52.653830600 +0200
@@ -9,6 +9,9 @@
  * license.
  */
 
+extern string locale_get_tsep ();
+extern string locale_get_decimal ();
+
 public enum DisplayFormat
 {
     AUTOMATIC,
@@ -37,12 +40,15 @@
 
     public Serializer (DisplayFormat format, int number_base, int trailing_digits)
     {
-        var radix_string = Posix.nl_langinfo (Posix.NLItem.RADIXCHAR);
+		string radix_string;
+		radix_string = locale_get_decimal ();
         if (radix_string != null && radix_string != "")
             radix = radix_string.locale_to_utf8 (-1, null, null).get_char (0);
         else
             radix = '.';
-        var tsep_string = Posix.nl_langinfo (Posix.NLItem.THOUSEP);
+
+		string tsep_string;
+		tsep_string = locale_get_tsep ();
         if (tsep_string != null && tsep_string != "")
             tsep = tsep_string.locale_to_utf8 (-1, null, null).get_char (0);
         else
--- ./src/windows.c.orig	2015-04-15 21:58:52.433817800 +0200
+++ ./src/windows.c	2015-04-15 22:04:42.098180500 +0200
@@ -1 +1,23 @@
+#include <string.h>
+#include <winnls.h>
+
+char *
+locale_get_tsep ()
+{
+	char tmp[4];
+
+	GetLocaleInfo (LOCALE_USER_DEFAULT, LOCALE_STHOUSAND, (LPTSTR)&tmp, 4);
+
+	return strdup(&tmp);
+}
+
+char *
+locale_get_decimal ()
+{
+	char tmp[4];
+
+	GetLocaleInfo (LOCALE_USER_DEFAULT, LOCALE_SDECIMAL, (LPTSTR)&tmp, 4);
+
+	return strdup(&tmp);
+}
 
