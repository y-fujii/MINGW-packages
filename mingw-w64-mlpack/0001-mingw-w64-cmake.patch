diff -Naur a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	2015-01-07 22:53:12.000000000 +0600
+++ b/CMakeLists.txt	2015-05-17 14:07:51.473444100 +0600
@@ -99,7 +99,7 @@
 # because then we are required to have a FORTRAN compiler (argh!) so we will try
 # and find LAPACK and BLAS ourselves, using a slightly modified variant of the
 # script Armadillo uses to find these.
-if (WIN32)
+if (WIN32 AND NOT MINGW)
   find_library(LAPACK_LIBRARY
       NAMES lapack liblapack lapack_win32_MT lapack_win32
       PATHS "C:/Program Files/Armadillo"
@@ -121,14 +121,14 @@
   # Piggyback LAPACK and BLAS linking into Armadillo link.
   set(ARMADILLO_LIBRARIES
       "${ARMADILLO_LIBRARIES};${BLAS_LIBRARY};${LAPACK_LIBRARY}")
-endif (WIN32)
+endif (WIN32 AND NOT MINGW)
 
 find_package(LibXml2 2.6.0 REQUIRED)
 
 # On Windows, LibXml2 has a couple dependencies and we want to make sure they
 # exist.  We don't need the include directory, so we just use a find_library
 # call, looking for .dlls.
-if (WIN32)
+if (WIN32 AND NOT MINGW)
   # Find a .dll, not a .lib, because libxml2 is probably dynamically linked.
   set(CMAKE_OLD_SUFFIXES "${CMAKE_FIND_LIBRARY_SUFFIXES}")
   set(CMAKE_FIND_LIBRARY_SUFFIXES ".dll")
@@ -161,7 +161,7 @@
 
   # Reset suffixes.
   set(CMAKE_FIND_LIBRARY_SUFFIXES "${CMAKE_OLD_SUFFIXES}")
-endif (WIN32)
+endif (WIN32 AND NOT MINGW)
 
 # Include directories for the previous dependencies.
 include_directories(${ARMADILLO_INCLUDE_DIRS})
@@ -185,10 +185,10 @@
 # On Windows, automatic linking is performed, so we don't need to worry about
 # it.  Clear the list of libraries to link against and let Visual Studio handle
 # it.
-if (WIN32)
+if (WIN32 AND NOT MINGW)
   link_directories(${Boost_LIBRARY_DIRS})
   set(Boost_LIBRARIES "")
-endif (WIN32)
+endif (WIN32 AND NOT MINGW)
 
 # For Boost testing framework (will have no effect on non-testing executables).
 # This specifies to Boost that we are dynamically linking to the Boost test
@@ -202,11 +202,11 @@
 include_directories(${CMAKE_SOURCE_DIR})
 
 # On Windows, things end up under Debug/ or Release/.
-if (WIN32)
+if (WIN32 AND NOT MINGW)
   set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
   set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
   set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
-else (WIN32)
+else (WIN32 AND NOT MINGW)
   # If not on Windows, put them under more standard UNIX-like places.  This is
   # necessary, otherwise they would all end up in
   # ${CMAKE_BINARY_DIR}/src/mlpack/methods/... or somewhere else random like
@@ -214,7 +214,7 @@
   set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/)
   set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/)
   set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/)
-endif (WIN32)
+endif (WIN32 AND NOT MINGW)
 
 # Determine whether or not this is a subversion repository, so that we can set
 # the trunk revision if necessary for --version (#309).
